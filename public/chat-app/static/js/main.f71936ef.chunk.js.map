{"version":3,"sources":["services/utils.ts","components/Room.tsx","components/Input.tsx","components/Toolbar.tsx","components/RoomsList.tsx","services/firebase/firestore/messages.ts","services/firebase/cloud-messaging.ts","services/firebase/index.ts","services/firebase/firestore/rooms.ts","services/wsata.ts","App.tsx","hooks/useAuth.ts","hooks/useSendMessage.tsx","hooks/useScrollTo.tsx","reportWebVitals.ts","index.tsx"],"names":["isToday","someDate","today","Date","getDate","getMonth","getFullYear","getMessageDisplayText","message","type","text","length","Room","props","className","children","RoomMessages","Input","useState","setMessage","textareaRef","useRef","formRef","resizeMessageField","current","style","height","scrollHeight","send","trim","replace","onSend","reset","focus","useEffect","ref","onSubmit","e","preventDefault","autoFocus","rows","value","placeholder","onChange","target","onInput","onKeyPress","key","shiftKey","disabled","disabledSend","Messages","NoMessages","MessagesLoading","WelcomeHeader","Message","React","forwardRef","sentToday","timestamp","received","withNext","attachmentsURL","onClick","onSelectAttachment","href","src","alt","download","pathname","endsWith","dir","split","pop","sent","read","title","toLocaleString","toLocaleDateString","toLocaleTimeString","hour","minute","Toolbar","username","backUrl","unreadMessagesCount","notificationsItems","onSelect","RoomsList","RoomItem","active","name","unreadCount","MessageNotificationItem","createdAt","undefined","Search","sentAt","latestMessage","unreadMessages","NoRooms","getMessagesCollectionRef","db","sender","room","collection","withConverter","toFirestore","data","Error","created_at","String","now","roomId","id","from_type","to_type","senderId","receiverId","customer","agent","is_read","message_type","file","filename","updated_at","Timestamp","userName","fromFirestore","snap","Number","Boolean","status","messageDocConverter","getUnreadRoomMessagesQuery","user","query","where","orderBy","a","batch","writeBatch","getDocs","forEach","update","commit","NoBaseURLProvidedError","fetchUserTokens","userType","userId","window","authUser","baseUrl","fetch","response","ok","statusText","json","body","tokensCache","agents","Map","customers","getUserPushTokens","has","get","tokens","set","pushNotifications","receiverTokens","token","method","headers","Authorization","process","JSON","stringify","to","notification","sendMessageNotification","receiverType","createApp","initializeApp","firebaseKey","projectId","REACT_APP_FIREBASE_PROJECT_ID","converter","AgentId","UserId","UserName","getRoomsCollectionRef","getCustomerRoomDoc","roomsQuery","limit","docs","UnauthenticatedError","fetchAPI","path","init","mode","credentials","Accept","FormData","append","chatContext","createContext","customerAuthContext","agentAuthContext","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retry","App","client","ChatApp","firebase","useMemo","auth","parent","backURL","redirect_url","useAuth","firestore","firebaseApp","getFirestore","Provider","CustomerChatApp","AgentChatApp","ErrorScreen","error","useContext","currentRoom","setCurrentRoom","roomsSearchTerm","setRoomsSearchTerm","roomsLatestMessage","setRoomsLatestMessage","rooms","useFirestoreQueryData","subscribe","enabled","unreadMessagesData","withoutRoom","getUnreadMessagesQuery","filter","find","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","roomsUnreadCount","result","map","handleOpenRoom","handleRoomsLatestMessageChange","updated","match","sort","b","aLatestMessage","bLatestMessage","getTime","RoomsListRoom","onLatestMessageChange","noMessagesMessage","messages","roomDoc","useQuery","useFirestoreDocumentData","doc","isLoading","LoadingScreen","showWelcomeHeader","useFirestoreCollectionMutation","onSuccess","getDoc","catch","console","warn","useSendMessage","sendMessage","mutate","getMessagesQuery","refetch","setMessagesAsRead","lastMessageRef","dependency","scrollIntoView","useScrollTo","zoomedImage","setZoomedImage","i","lastMessage","sameAsAfter","URL","upload","useMutation","uploadFile","handleSendFile","mutateAsync","handleSendText","variables","onSelectFiles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f71936ef.chunk.js","sourcesContent":["import { Message } from \"./firebase/firestore/messages\";\r\n\r\nexport function isToday(someDate: Date) {\r\n  const today = new Date();\r\n  return (\r\n    someDate.getDate() === today.getDate() &&\r\n    someDate.getMonth() === today.getMonth() &&\r\n    someDate.getFullYear() === today.getFullYear()\r\n  );\r\n}\r\n\r\nexport function formatMessageDate(sentAt: Date): string {\r\n  return isToday(sentAt)\r\n    ? sentAt.toLocaleTimeString([], {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      })\r\n    : sentAt.toLocaleDateString();\r\n}\r\n\r\nexport function getMessageDisplayText(message: Message): string {\r\n  if (message.type === \"file\") return \"أرسل لك ملف\";\r\n\r\n  if (message.type === \"image\") return \"أرسل لك صورة\";\r\n\r\n  if (\r\n    message.type === \"transferring\" ||\r\n    (message.text && message.text.length > 0)\r\n  )\r\n    return message.text as string;\r\n\r\n  return \"أرسل لك رسالة\";\r\n}\r\n","import React from \"react\";\r\nimport { isToday } from \"services/utils\";\r\nimport { URL } from \"url\";\r\n\r\nexport function Room(props: React.HTMLAttributes<HTMLElement>) {\r\n  return (\r\n    <main className={`overflow-y-auto py-8 flex flex-col ${props.className}`}>\r\n      {props.children}\r\n    </main>\r\n  );\r\n}\r\n\r\nRoom.Messages = RoomMessages;\r\n\r\nRoom.NoMessages = (props: React.HTMLAttributes<HTMLElement>) => {\r\n  return (\r\n    <div\r\n      className={`flex flex-1 items-center justify-center ${props.className}`}>\r\n      <p className='text-gray-200'>{props.children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nRoom.MessagesLoading = () => {\r\n  return (\r\n    <div className='h-full flex items-center justify-center'>\r\n      <p className='text-gray-200'>\r\n        <i className='fa fa-spinner text-4xl fa-fw fa-pulse my-2'></i>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction RoomMessages(props: React.PropsWithChildren<{}>) {\r\n  return <div className='max-w-2xl mx-auto px-6 w-full'>{props.children}</div>;\r\n}\r\n\r\nRoom.WelcomeHeader = function (props: React.HTMLAttributes<HTMLElement>) {\r\n  return (\r\n    <header className={`text-center ${props.className}`}>\r\n      <h1 className='text-3xl font-bold text-primary'>{\"مركز المساعدة\"}</h1>\r\n      <div className='mb-2 mt-1 relative'>\r\n        <span className='inline-block w-52 h-1 bg-accent'></span>\r\n        <span className='absolute left-1/2 -translate-x-1/2 translate-y-1/4 inline-block w-5 h-5 border-4 border-accent bg-white rounded-full'></span>\r\n      </div>\r\n      <p>{\"لديك اسئلة ؟ تحدث مع احد ممثلي خدمة العملاء\"}</p>\r\n    </header>\r\n  );\r\n};\r\n\r\nRoomMessages.Message = React.forwardRef<\r\n  HTMLDivElement,\r\n  {\r\n    received: boolean;\r\n    withNext: boolean;\r\n    sent: boolean;\r\n    read: boolean;\r\n    timestamp: Date;\r\n    text?: string;\r\n    attachmentsURL?: URL;\r\n    type: \"text\" | \"image\" | \"file\" | \"transferring\";\r\n    onSelectAttachment: (src: string) => void;\r\n  }\r\n>((props, ref) => {\r\n  const sentToday = isToday(props.timestamp);\r\n\r\n  if (props.type === \"transferring\")\r\n    return (\r\n      <div className=\"mb-6 mt-12 flex\">\r\n        <div className='inline-block mx-auto p-2 px-4 rounded-full bg-gray-300 text-white'>\r\n          {props.text}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`flex ${props.received ? \"justify-end\" : \"justify-start\"} ${\r\n        props.withNext ? \"mb-2\" : \"mb-6\"\r\n      }`}>\r\n      <div\r\n        className={`flex items-end space-x-2 ${\r\n          props.received ? \"flex-row-reverse\" : \"space-x-reverse\"\r\n        }`}>\r\n        <div\r\n          ref={ref}\r\n          className={`break-all whitespace-pre-wrap text-primary-50 select-text max-w-full sm:max-w-sm ${\r\n            props.received\r\n              ? \"rounded-bl-none bg-primary-400\"\r\n              : \"rounded-br-none bg-primary-500\"\r\n          } \r\n              ${\r\n                props.attachmentsURL\r\n                  ? \"pt-3 pb-2 px-3 sm:pt-4 sm:pb-3 sm:px-4\"\r\n                  : \"py-3 px-6\"\r\n              }\r\n              rounded-xl`}>\r\n          {/* Attached media */}\r\n          {props.attachmentsURL && (\r\n            <div className='relative group cursor-pointer'>\r\n              {props.type === \"image\" ? (\r\n                <>\r\n                  <div\r\n                    className='w-full h-full absolute bg-primary-400/10 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center text-6xl'\r\n                    onClick={() =>\r\n                      props.attachmentsURL &&\r\n                      props.onSelectAttachment(props.attachmentsURL.href)\r\n                    }>\r\n                    <i className='far fa-search-plus text-white'></i>\r\n                  </div>\r\n                  <img\r\n                    src={props.attachmentsURL.href}\r\n                    alt='media'\r\n                    className='mb-2 sm:mb-3 min-w-[8rem] min-h-[2rem]'\r\n                  />\r\n                </>\r\n              ) : (\r\n                <a\r\n                  href={props.attachmentsURL.href}\r\n                  download\r\n                  className='flex items-center space-x-3 space-x-reverse'>\r\n                  <span className='rounded-full w-12 h-12 group flex items-center justify-center text-primary bg-primary-50'>\r\n                    <i\r\n                      className={`fa ${\r\n                        props.attachmentsURL.pathname.endsWith(\".zip\")\r\n                          ? \"fa-file-archive\"\r\n                          : props.attachmentsURL.pathname.endsWith(\".pdf\")\r\n                          ? \"fa-file-pdf\"\r\n                          : props.attachmentsURL.pathname.endsWith(\".docx\")\r\n                          ? \"fa-file-word\"\r\n                          : props.attachmentsURL.pathname.endsWith(\".doc\")\r\n                          ? \"fa-file-word\"\r\n                          : \"fa-file\"\r\n                      } text-2xl group-hover:hidden`}></i>\r\n                    <i className='fa fa-file-download text-2xl hidden group-hover:inline'></i>\r\n                  </span>\r\n                  <span dir='auto'>\r\n                    {props.attachmentsURL.pathname.split(\"/\").pop()}\r\n                  </span>\r\n                </a>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div dir='auto'>\r\n            {/* Message text */}\r\n            {props.text}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Message meta */}\r\n        <span\r\n          className={`mx-1 ${\r\n            sentToday ? \"mb-3\" : \"\"\r\n          } space-x-2 whitespace-nowrap align-top text-gray-200 flex items-center select-text ${\r\n            props.received ? \"flex-row-reverse\" : \"space-x-reverse\"\r\n          }`}>\r\n          {/* Message sent status */}\r\n          {!props.received &&\r\n            (props.sent ? (\r\n              <i\r\n                className={`fas fa-check ${\r\n                  props.read ? \"text-accent\" : \"text-gray-200\"\r\n                }`}></i>\r\n            ) : (\r\n              <i className='fas fa-clock'></i>\r\n            ))}\r\n\r\n          {/* Message sent at */}\r\n          <time\r\n            title={props.timestamp.toLocaleString()}\r\n            className='flex space-x-1 space-x-reverse'>\r\n            {!sentToday && (\r\n              <>\r\n                <span className='text-gray-300'>\r\n                  {props.timestamp.toLocaleDateString()}\r\n                </span>\r\n                <span>-</span>\r\n              </>\r\n            )}\r\n            <span>\r\n              {props.timestamp.toLocaleTimeString([], {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n              })}\r\n            </span>\r\n          </time>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport function Input(props: {\r\n  disabledSend?: boolean;\r\n  onSelectFiles: (files: File) => void;\r\n  onSend: (message: string) => void;\r\n}) {\r\n  const [message, setMessage] = useState(\"\");\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n  const imageInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const resizeMessageField = () => {\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = \"1.75em\";\r\n      textareaRef.current.style.height =\r\n        textareaRef.current.scrollHeight + \"px\";\r\n    }\r\n  };\r\n\r\n  const send = () => {\r\n    const text = message.trim().replace(/\\n\\s*\\n\\s*\\n/g, \"\\n\\n\");\r\n\r\n    if (!text.length) return;\r\n\r\n    props.onSend(text);\r\n\r\n    // reset\r\n\r\n    setMessage(\"\");\r\n\r\n    formRef.current?.reset();\r\n\r\n    textareaRef?.current?.focus();\r\n  };\r\n\r\n  useEffect(resizeMessageField, [message]);\r\n\r\n  return (\r\n    <div className='bg-primary-600 text-white'>\r\n      <form\r\n        ref={formRef}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          send();\r\n        }}\r\n        className='flex items-end py-4 px-4 2xl:px-0 space-x-4 space-x-reverse max-w-2xl mx-auto'>\r\n        {/* <input\r\n          type='file'\r\n          className='hidden'\r\n          ref={imageInputRef}\r\n          onChange={(e) => {\r\n            const files = e.target.files;\r\n            if (!files || !files.length) return;\r\n\r\n            props.onSelectFiles(files[0]);\r\n\r\n            textareaRef.current?.focus();\r\n          }}\r\n        />\r\n        <button\r\n          type='button'\r\n          className='text-white fas fa-paperclip text-3xl mb-1 hover:text-accent focus:outline-none focus:text-accent disabled:hover:text-primary-200/50 disabled:text-primary-200/50 disabled:cursor-default'\r\n          onClick={() => {\r\n            imageInputRef?.current?.click();\r\n          }}></button> */}\r\n\r\n        <textarea\r\n          ref={textareaRef}\r\n          autoFocus={true}\r\n          rows={1}\r\n          value={message}\r\n          placeholder='أدخل رسالتك...'\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          className='flex-1 align-bottom px-6 py-3 rounded-lg outline-none text-gray-900 focus:outline-none overflow-y-auto resize-none min-h-[1em] max-h-[10em]'\r\n          onInput={resizeMessageField}\r\n          onKeyPress={function (e) {\r\n            if (e.key === \"Enter\" && !e.shiftKey) {\r\n              e.preventDefault();\r\n              send();\r\n            }\r\n          }}\r\n        />\r\n\r\n        <button\r\n          type='submit'\r\n          disabled={props.disabledSend}\r\n          className='space-x-2 space-x-reverse mb-2 disabled:hover:text-primary-200/50 disabled:text-primary-200/50 disabled:cursor-default hover:text-accent text-lg 2xl:text-xl focus:outline-none focus:text-accent'>\r\n          <span>{\"إرسال\"}</span>\r\n          <i className='fas fa-paper-plane'></i>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@reach/menu-button\";\r\n\r\nexport function Toolbar({\r\n  username,\r\n  backUrl,\r\n  unreadMessagesCount,\r\n  notificationsItems,\r\n  className,\r\n}: {\r\n  backUrl?: string;\r\n  username: string;\r\n  unreadMessagesCount?: number;\r\n  notificationsItems?: React.ReactElement<typeof Toolbar.RoomItem>[];\r\n} & HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <header className={`bg-primary py-4 px-14 text-primary-50 ${className}`}>\r\n      <div className='flex mx-auto'>\r\n        {/* Agents list*/}\r\n        <div className='flex items-center space-x-3 sm:space-x-4 space-x-reverse sm:space-x-reverse'>\r\n          <span className='text-primary-200'>\r\n            {\"مرحبا\"} {username}\r\n          </span>\r\n        </div>\r\n\r\n        {/*  Messages notifications */}\r\n        <div className='mr-auto flex items-center space-x-3 sm:space-x-4 space-x-reverse sm:space-x-reverse'>\r\n          {notificationsItems && (\r\n            <Menu>\r\n              <MenuButton className='relative'>\r\n                <i className='fa fa-comment-alt text-xl'></i>\r\n                {unreadMessagesCount && unreadMessagesCount > 0 ? (\r\n                  <span className='min-w-[1.4em] h-5 px-1 text-sm font-bold absolute translate-x-2/4 -translate-y-1/4 bg-red-400 rounded-full ring-2 ring-primary'>\r\n                    {unreadMessagesCount}\r\n                  </span>\r\n                ) : null}\r\n              </MenuButton>\r\n              <MenuList\r\n                dir='rtl'\r\n                className='py-2 bg-white border border-gray-50 rounded-sm divide-y divide-gray-100 max-h-[50vh] overflow-y-auto'>\r\n                {notificationsItems.length ? (\r\n                  notificationsItems\r\n                ) : (\r\n                  <MenuItem\r\n                    className='py-2 px-4 min-w-[10em] max-w-sm text-center text-gray-200'\r\n                    onSelect={() => {}}>\r\n                    {\"لا يوجد رسائل واردة\"}\r\n                  </MenuItem>\r\n                )}\r\n              </MenuList>\r\n            </Menu>\r\n          )}\r\n          {backUrl && (\r\n            <a\r\n              href={backUrl}\r\n              className='space-x-2 space-x-reverse text-primary-200'>\r\n              <span>{\"رجوع\"}</span>\r\n              <i className='fa fa-share fa-flip-horizontal'></i>\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\ntype RoomItemProps = {\r\n  name: string;\r\n  active: boolean;\r\n  unreadCount: number;\r\n  onSelect: Function;\r\n};\r\n\r\nToolbar.RoomItem = ({ active, name, unreadCount, onSelect }: RoomItemProps) => {\r\n  return (\r\n    <MenuItem\r\n      className={`py-2 px-4 cursor-pointer min-w-[10em] active:bg-primary active:text-primary-50 flex items-center justify-between space-x-reverse space-x-2 ${\r\n        active ? \"bg-primary text-primary-50\" : \"hover:bg-primary-100\"\r\n      }`}\r\n      onSelect={() => onSelect()}>\r\n      <span>\r\n        <i\r\n          className={`fa fa-user ${\r\n            active\r\n              ? \"text-white\"\r\n              : unreadCount\r\n              ? \"text-primary\"\r\n              : \"text-gray-200\"\r\n          }`}></i>\r\n        <span className='mr-2'>{name}</span>\r\n      </span>\r\n      {unreadCount > 0 && (\r\n        <span className='min-w-[1.4em] h-5 px-1 text-sm font-bold bg-red-400 text-white rounded-full text-center'>\r\n          {unreadCount}\r\n        </span>\r\n      )}\r\n    </MenuItem>\r\n  );\r\n};\r\n\r\ntype MessageNotificationProps = {\r\n  name: string;\r\n  message: string;\r\n  createdAt: Date;\r\n  read?: boolean;\r\n  onSelect?: Function;\r\n};\r\n\r\nToolbar.MessageNotificationItem = ({\r\n  name,\r\n  createdAt,\r\n  read,\r\n  message,\r\n  onSelect,\r\n}: MessageNotificationProps) => {\r\n  function isToday(someDate: Date) {\r\n    const today = new Date();\r\n    return (\r\n      someDate.getDate() === today.getDate() &&\r\n      someDate.getMonth() === today.getMonth() &&\r\n      someDate.getFullYear() === today.getFullYear()\r\n    );\r\n  }\r\n  return (\r\n    <MenuItem\r\n      className='py-2 px-4 cursor-pointer hover:bg-primary-100 min-w-[15em] max-w-sm active:bg-primary-600 group active:text-primary-50 flex flex-row space-x-4 space-x-reverse'\r\n      onSelect={() => onSelect && onSelect()}>\r\n      <div>\r\n        {read ? (\r\n          <span className='rounded-full w-12 h-12 flex items-center justify-center text-primary bg-primary-50'>\r\n            <i className='fa fa-envelope-open text-2xl'></i>\r\n          </span>\r\n        ) : (\r\n          <span className='rounded-full w-12 h-12 flex items-center justify-center text-white bg-red-400'>\r\n            <i className='fa fa-envelope text-xl'></i>\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <span\r\n          className={`group-active:text-primary-100 font-bold ${\r\n            read ? \"text-gray-200\" : \"text-primary\"\r\n          }`}>\r\n          {name}\r\n        </span>\r\n        <br />\r\n        <span>{message}</span>\r\n        <br />\r\n        <time className='text-gray-200'>\r\n          {isToday(createdAt)\r\n            ? createdAt.toLocaleTimeString(undefined, {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n              })\r\n            : createdAt.toLocaleString()}\r\n        </time>\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@reach/menu-button\";\r\nimport { Room } from \"services/firebase/firestore/rooms\";\r\nimport { formatMessageDate } from \"services/utils\";\r\n\r\ntype RoomsListProps = React.PropsWithChildren<{}>;\r\n\r\nexport function RoomsList(props: RoomsListProps) {\r\n  return (\r\n    <div className='w-80 bg-primary-50 overflow-y-auto'>{props.children}</div>\r\n  );\r\n}\r\n\r\ntype RoomsSearchProps = {\r\n  onChange: (term: string) => void;\r\n};\r\n\r\nRoomsList.Search = function (props: RoomsSearchProps) {\r\n  return (\r\n    <div className='border-b px-2 py-2'>\r\n      <div className='flex py-2 px-3 items-center rounded-full bg-gray-100'>\r\n        <i className='fa fa-search text-gray-400'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='ابحث باسم العميل'\r\n          className='flex-1 px-2 outline-none bg-transparent'\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype RoomProps = {\r\n  name: string;\r\n  unreadMessages?: number;\r\n  latestMessage?: {\r\n    text: string;\r\n    sentAt: Date;\r\n    read: boolean;\r\n  };\r\n  active?: boolean;\r\n  onSelect: Function;\r\n};\r\n\r\nRoomsList.Room = function (props: RoomProps) {\r\n  return (\r\n    <div\r\n      onClick={() => props.onSelect()}\r\n      className={`pt-4 flex space-x-3 space-x-reverse group ${\r\n        props.active\r\n          ? \"bg-primary text-gray-100\"\r\n          : \"cursor-pointer hover:bg-gray-200\"\r\n      }`}>\r\n      {/* User Icon */}\r\n      <span className='mr-2 align-middle w-12 h-12 rounded-full flex items-center justify-center bg-primary-100 text-primary-800'>\r\n        <i className='fa fa-user text-xl'></i>\r\n      </span>\r\n\r\n      <div className={`flex-1 ${!props.active && \"border-b\"} pb-4 pl-3`}>\r\n        <div className='flex justify-between'>\r\n          {/* Name  */}\r\n          <div>{props.name}</div>\r\n\r\n          {/* Last Message Date  */}\r\n          {props.latestMessage?.sentAt && (\r\n            <span\r\n              className={`${\r\n                props.active\r\n                  ? \"text-gray-100\"\r\n                  : \"text-gray-300 group-hover:text-gray-400\"\r\n              }`}>\r\n              {formatMessageDate(props.latestMessage?.sentAt)}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        <div className='flex justify-between mt-2 min-h-[1rem]'>\r\n          {/* Message  */}\r\n          {props.latestMessage?.text && (\r\n            <span\r\n              className={`space-x-2 space-x-reverse flex items-center ${\r\n                props.active\r\n                  ? \"text-gray-100\"\r\n                  : \"text-gray-300 group-hover:text-gray-400\"\r\n              }`}>\r\n              <span>\r\n                <i\r\n                  className={`fas fa-check ${\r\n                    props.latestMessage.read ? \"text-accent\" : \"text-gray-200\"\r\n                  }`}></i>\r\n              </span>\r\n              <span title={props.latestMessage.text} className=\"max-w-[13ch] whitespace-nowrap overflow-hidden overflow-ellipsis\">{props.latestMessage.text}</span>\r\n            </span>\r\n          )}\r\n\r\n          {/* Unread Count  */}\r\n          {(props.unreadMessages || 0) > 0 && (\r\n            <span className='h-5 w-5 flex justify-center items-center font-bold text-red-100 bg-red-400 rounded-full'>\r\n              {props.unreadMessages}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRoomsList.NoRooms = () => {\r\n  return (\r\n    <div dir='auto' className='py-12 text-center text-gray-300'>\r\n      {\"لا يوجد عملاء\"}\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  collection,\r\n  query,\r\n  orderBy,\r\n  where,\r\n  getDocs,\r\n  writeBatch,\r\n  FirestoreDataConverter,\r\n  Query,\r\n  CollectionReference,\r\n  QueryDocumentSnapshot,\r\n  Firestore,\r\n  Timestamp,\r\n  limit,\r\n} from \"firebase/firestore\";\r\nimport { AppUser } from \"../auth\";\r\nimport { ID } from \"../index\";\r\nimport { Room } from \"./rooms\";\r\n\r\ntype UserType = \"App\\\\User\" | \"App\\\\customer\";\r\ntype UNIXEpoch = string;\r\n\r\n/**\r\n * @example\r\n * ```\r\n * created_at: \"1635769445250\"\r\n * file: \"\"\r\n * from_type: \"App\\User\"\r\n * is_read: 1 (number)\r\n * message_type: \"transferring\" | \"text\"\r\n * receiverId: \"71137\"\r\n * roomId: \"1635167314782\"\r\n * senderId: \"316\"\r\n * text: \"الرسائل السابقة قديمة\"\r\n * to_type: \"App\\customer\"\r\n * updated_at: November 1, 2021 at 2:24:05 PM UTC+2 (timestamp)\r\n * ```\r\n */\r\ntype MessageDoc = {\r\n  /**\r\n   * use `Date.now()` Format\r\n   */\r\n  created_at: UNIXEpoch;\r\n  roomId: ID;\r\n  senderId: ID;\r\n  receiverId: ID;\r\n  from_type: UserType;\r\n  to_type: UserType;\r\n  is_read: number;\r\n  message_type: \"transferring\" | \"text\" | \"image\" | \"file\";\r\n  userName: string | null;\r\n  /**\r\n   * image name usually epoch followed by extention\r\n   * @example\r\n   * ```txt\r\n   * 16351729236656.jpg\r\n   * 16351732711145.png\r\n   * ```\r\n   */\r\n  file: string;\r\n  text: string;\r\n  targeted_device_token?: null | string;\r\n  updated_at?: Timestamp;\r\n};\r\n\r\nexport type Message = {\r\n  id: string;\r\n  roomId: ID;\r\n  created_at: Date;\r\n  read: boolean;\r\n  received: boolean;\r\n  status: \"sent\" | \"sending\" | \"error\";\r\n  type: \"text\" | \"image\" | \"file\" | \"transferring\";\r\n} & MessageContent;\r\n\r\ntype MessageContent = AtLeastOne<{\r\n  text: string;\r\n  filename: string;\r\n}>;\r\n\r\nconst messageDocConverter = (\r\n  sender: AppUser,\r\n  room?: Room\r\n): FirestoreDataConverter<Message> => ({\r\n  toFirestore: function (data: Message): MessageDoc {\r\n    // console.log(sender)\r\n    if (!room)\r\n      throw new Error(\r\n        \"Trying to convert message to firestore but no room provided.\"\r\n      );\r\n    return {\r\n      created_at: String(Date.now()),\r\n      roomId: room.id,\r\n      from_type: sender.type === \"agent\" ? \"App\\\\User\" : \"App\\\\customer\",\r\n      to_type: sender.type === \"agent\" ? \"App\\\\customer\" : \"App\\\\User\",\r\n      senderId: sender.id,\r\n      receiverId: sender.type === \"agent\" ? room.customer.id : room.agent.id,\r\n      is_read: data.read ? 1 : 0,\r\n      message_type: data.type,\r\n      file: data.filename || \"\",\r\n      text: data.text || \"\",\r\n      updated_at: Timestamp.now(),\r\n      userName: sender?.name,\r\n    };\r\n  },\r\n  fromFirestore: (snap: QueryDocumentSnapshot<MessageDoc>): Message => {\r\n    const data = snap.data();\r\n\r\n    return {\r\n      id: snap.id,\r\n      roomId: data.roomId,\r\n      created_at: new Date(Number(data.created_at)),\r\n      read: Boolean(data.is_read),\r\n      received: data.senderId !== sender.id,\r\n      status: \"sent\",\r\n      text: data.text,\r\n      filename: data.file ? data.file : undefined,\r\n      type:\r\n        data.message_type === \"image\" || data.message_type === \"file\"\r\n          ? data.message_type\r\n          : data.message_type === \"transferring\"\r\n          ? \"transferring\"\r\n          : \"text\",\r\n    };\r\n  },\r\n});\r\n\r\n//\r\n// Queries\r\n//\r\n\r\nexport const getMessagesCollectionRef = (\r\n  db: Firestore,\r\n  sender: AppUser,\r\n  room?: Room\r\n): CollectionReference<Message> => {\r\n  return collection(db, `messages`).withConverter(\r\n    messageDocConverter(sender, room)\r\n  );\r\n};\r\n\r\nexport function getUnreadRoomMessagesQuery(\r\n  db: Firestore,\r\n  user: AppUser,\r\n  room: Room\r\n): Query<Message> {\r\n  return query(\r\n    getMessagesCollectionRef(db, user, room),\r\n    where(\"roomId\", \"==\", room.id),\r\n    where(\"receiverId\", \"==\", user.id),\r\n    where(\"is_read\", \"==\", 0),\r\n    orderBy(\"created_at\", \"asc\")\r\n  );\r\n}\r\n\r\nexport function getUnreadMessagesQuery(\r\n  db: Firestore,\r\n  user: AppUser,\r\n  withoutRoom?: Room\r\n): Query<Message> {\r\n  return query(\r\n    getMessagesCollectionRef(db, user),\r\n    where(\"receiverId\", \"==\", user.id),\r\n    where(\"is_read\", \"==\", 0),\r\n    ...(withoutRoom?.id\r\n      ? [where(\"roomId\", \"!=\", withoutRoom.id), orderBy(\"roomId\")]\r\n      : []),\r\n    orderBy(\"created_at\", \"desc\")\r\n  );\r\n}\r\n\r\nexport function getMessagesQuery(\r\n  db: Firestore,\r\n  sender: AppUser,\r\n  room: Room\r\n): Query<Message> {\r\n  return query(\r\n    getMessagesCollectionRef(db, sender, room),\r\n    where(\"roomId\", \"==\", room.id),\r\n    orderBy(\"created_at\", \"asc\")\r\n  );\r\n}\r\n\r\nexport function getRoomsLatestMessage(\r\n  db: Firestore,\r\n  sender: AppUser,\r\n  room: Room\r\n) {\r\n  return query(\r\n    getMessagesCollectionRef(db, sender, room),\r\n    where(\"roomId\", \"==\", room.id),\r\n    orderBy(\"created_at\", \"desc\"),\r\n    limit(1)\r\n  );\r\n}\r\n\r\n//\r\n// Mutations\r\n//\r\n\r\nexport async function setMessagesAsRead(\r\n  db: Firestore,\r\n  sender: AppUser,\r\n  room: Room\r\n) {\r\n  const batch = writeBatch(db);\r\n  const messages = await getDocs(getUnreadRoomMessagesQuery(db, sender, room));\r\n\r\n  messages.forEach((message) => {\r\n    batch.update(message.ref.withConverter(null), {\r\n      is_read: 1,\r\n    } as Partial<MessageDoc>);\r\n  });\r\n\r\n  await batch.commit();\r\n}\r\n","import { Message } from \"./firestore/messages\";\r\nimport { getMessageDisplayText } from \"services/utils\";\r\nimport { ID } from \".\";\r\n\r\nclass NoBaseURLProvidedError extends Error {}\r\n\r\nasync function fetchUserTokens(\r\n  userType: \"agent\" | \"customer\",\r\n  userId: ID\r\n): Promise<string[]> {\r\n  if (!window.authUser.baseUrl) {\r\n    throw new NoBaseURLProvidedError(\"No base Url provided.\");\r\n  }\r\n\r\n  const response = await fetch(\r\n    `${window.authUser.baseUrl}/FcmToken?type=${userType}&id=${userId}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  const body: string[] = await response.json();\r\n\r\n  return body;\r\n}\r\n\r\ntype TokensMap = Map<ID, string[]>;\r\n\r\nconst tokensCache: { agents: TokensMap; customers: TokensMap } = {\r\n  agents: new Map(),\r\n  customers: new Map(),\r\n};\r\n\r\nasync function getUserPushTokens(\r\n  userType: \"agent\" | \"customer\",\r\n  userId: ID\r\n): Promise<string[]> {\r\n  // Check cache for user's tokens\r\n\r\n  if (userType === \"agent\" && tokensCache.agents.has(userId))\r\n    return tokensCache.agents.get(userId) as string[];\r\n\r\n  if (userType === \"customer\" && tokensCache.customers.has(userId))\r\n    return tokensCache.customers.get(userId) as string[];\r\n\r\n  // Fetch user's tokens\r\n\r\n  const tokens = await fetchUserTokens(userType, userId);\r\n\r\n  // Update local cache\r\n\r\n  if (userType === \"agent\") tokensCache.agents.set(userId, tokens);\r\n\r\n  if (userType === \"customer\") tokensCache.agents.set(userId, tokens);\r\n\r\n  return tokens;\r\n}\r\n\r\nasync function pushNotifications(\r\n  receiverTokens: string[],\r\n  title: string,\r\n  message: string\r\n) {\r\n  for (const token of receiverTokens) {\r\n    fetch(`https://fcm.googleapis.com/fcm/send`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Key=${process.env.REACT_APP_FIREBASE_CLOUD_MESSAGING_SERVER_KEY}`,\r\n      },\r\n      body: JSON.stringify({\r\n        to: token,\r\n        notification: {\r\n          title,\r\n          body: message,\r\n        },\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport async function sendMessageNotification(\r\n  message: Message,\r\n  receiverType: \"agent\" | \"customer\",\r\n  receiverId: ID\r\n) {\r\n  await pushNotifications(\r\n    await getUserPushTokens(receiverType, receiverId),\r\n    \"لديك رسالة جديدة\",\r\n    getMessageDisplayText(message)\r\n  );\r\n}\r\n","import { FirebaseApp, initializeApp } from \"firebase/app\";\r\nimport { getFirestore, connectFirestoreEmulator } from \"firebase/firestore\";\r\nimport firebaseKey from \"./firebase-key.json\";\r\n\r\nexport type ID = string;\r\n\r\nexport function createApp() {\r\n  return initializeApp({\r\n    ...firebaseKey,\r\n    projectId:\r\n      process.env.REACT_APP_FIREBASE_PROJECT_ID ?? firebaseKey.projectId,\r\n  });\r\n}\r\n\r\nexport function createFirestore(firebaseApp: FirebaseApp) {\r\n  const db = getFirestore(firebaseApp);\r\n\r\n  // if (process.env.NODE_ENV === \"development\") {\r\n  //   connectFirestoreEmulator(\r\n  //     db,\r\n  //     process.env.REACT_APP_FIREBASE_EMULATORS_FIRESTORE_HOST,\r\n  //     process.env.REACT_APP_FIREBASE_EMULATORS_FIRESTORE_PORT\r\n  //   );\r\n  // }\r\n\r\n  return db;\r\n}\r\n","import {\r\n  collection,\r\n  where,\r\n  query,\r\n  limit,\r\n  getDocs,\r\n  Query,\r\n  FirestoreDataConverter,\r\n  QueryDocumentSnapshot,\r\n  DocumentReference,\r\n  Firestore,\r\n  CollectionReference,\r\n} from \"firebase/firestore\";\r\n// import { getAssignedCustomers } from \"services/wsata\";\r\nimport { Agent, Customer } from \"../auth\";\r\nimport { ID } from \"../index\";\r\n\r\ntype OnlineStatus = \"غير متاح\" | \"متاح الآن\";\r\ntype DateFormat = string;\r\n\r\n/**\r\n *\r\n * @example\r\n * ```\r\n *  AgentId : \"321\",\r\n *  AgentLastActive : \"2021-11-01 16:13:55.437143+0300\",\r\n *  AgentStatus : \"غير متاح\" | \"متاح الآن\",\r\n *  UserId : \"69578\",\r\n *  UserLastActive : \"2021-11-01 15:47:17.551302+0300\",\r\n *  UserName : \"test\",\r\n *  UserStatus : غير متاح\" | \"متاح الآن\",\r\n *  oldAgentsIds [\"319\"],\r\n * ```\r\n */\r\ntype RoomDoc = {\r\n  AgentId: ID;\r\n  UserId: ID;\r\n  UserName: string;\r\n  AgentLastActive?: DateFormat;\r\n  UserLastActive?: DateFormat;\r\n  AgentStatus?: OnlineStatus;\r\n  UserStatus?: OnlineStatus;\r\n  oldAgentsIds?: string[];\r\n};\r\n\r\nexport type Room = {\r\n  id: ID;\r\n  customer: {\r\n    id: ID;\r\n    name: string;\r\n    // online: boolean;\r\n    // lastSeen: Date;\r\n  };\r\n  agent: {\r\n    id: ID;\r\n    // online: boolean;\r\n    // lastSeen: Date;\r\n  };\r\n};\r\n\r\nconst converter: FirestoreDataConverter<Room> = {\r\n  toFirestore: function (data: Room): RoomDoc {\r\n    return {\r\n      AgentId: String(data.agent.id),\r\n      UserId: String(data.customer.id),\r\n      UserName: data.customer.name,\r\n      // UserStatus: data.user.online ? \"متاح الآن\" : \"غير متاح\",\r\n      // AgentStatus: data.agent.online ? \"متاح الآن\" : \"غير متاح\",\r\n      // AgentLastActive: data.agent.lastSeen.toISOString(),\r\n      // UserLastActive: data.user.lastSeen.toISOString(),\r\n    };\r\n  },\r\n  fromFirestore: (snap: QueryDocumentSnapshot<RoomDoc>): Room => {\r\n    const data = snap.data();\r\n\r\n    return {\r\n      id: snap.id,\r\n      customer: {\r\n        id: data.UserId,\r\n        name: data.UserName,\r\n        // lastSeen: new Date(data.UserLastActive),\r\n        // online: data.UserStatus === \"متاح الآن\" ? true : false,\r\n      },\r\n      agent: {\r\n        id: data.AgentId,\r\n        // lastSeen: new Date(data.AgentLastActive),\r\n        // online: data.AgentStatus === \"متاح الآن\" ? true : false,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\n//\r\n// Queries\r\n//\r\n\r\nexport const getRoomsCollectionRef = (\r\n  db: Firestore\r\n): CollectionReference<Room> => {\r\n  return collection(db, `rooms`).withConverter(converter);\r\n};\r\n\r\nexport function getAgentRoomsQuery(db: Firestore, user: Agent): Query<Room> {\r\n  return query(getRoomsCollectionRef(db), where(\"AgentId\", \"==\", user.id));\r\n}\r\n\r\nexport async function getCustomerRoomDoc(\r\n  db: Firestore,\r\n  customer: Customer\r\n): Promise<DocumentReference<Room> | null> {\r\n  const roomsQuery = query(\r\n    getRoomsCollectionRef(db),\r\n    where(\"UserId\", \"==\", customer.id),\r\n    limit(1)\r\n  );\r\n\r\n  const { docs } = await getDocs(roomsQuery);\r\n\r\n  return docs.length ? docs[0].ref : null;\r\n}\r\n","import { AppUser } from \"./firebase/auth\";\r\nimport { Room } from \"./firebase/firestore/rooms\";\r\n\r\nexport class UnauthenticatedError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = \"خطأ في المصادقة\";\r\n  }\r\n}\r\n\r\nfunction fetchAPI(\r\n  path: string,\r\n  init?: Omit<RequestInit, \"mode\" | \"credentials\" | \"headers\">\r\n) {\r\n  return fetch(process.env.REACT_APP_WSATA_API_URL + path, {\r\n    ...(init || {}),\r\n    mode: \"cors\",\r\n    credentials: \"include\",\r\n    headers: { Accept: \"application/json\" },\r\n  });\r\n}\r\n\r\nexport async function uploadFile(file: File, sender: AppUser, room: Room) {\r\n  var data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  if (sender.type === \"agent\") {\r\n    data.append(\"to_customer_id\", room.customer.id);\r\n  }\r\n\r\n  const response = await fetchAPI(\"/file\", {\r\n    method: \"POST\",\r\n    body: data,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  type ResponseType = { data: { filename: string; type: \"image\" | \"file\" } };\r\n\r\n  const {\r\n    data: { filename, type },\r\n  } = (await response.json()) as ResponseType;\r\n\r\n  return {\r\n    filename,\r\n    type,\r\n  };\r\n}\r\n\r\nexport function getFileUrl(filename: string): URL | undefined {\r\n  return process.env.REACT_APP_WSATA_API_URL ? new URL(`${process.env.REACT_APP_WSATA_API_URL}/file/${filename}`) : undefined;\r\n}\r\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Room as RoomComponent } from \"components/Room\";\nimport { Input as InputComponent } from \"components/Input\";\nimport { Toolbar } from \"components/Toolbar\";\nimport { RoomsList } from \"components/RoomsList\";\nimport { useAuth, useScrollTo, useSendMessage } from \"hooks\";\nimport {\n  QueryClientProvider,\n  QueryClient,\n  useQuery,\n  useMutation,\n} from \"react-query\";\nimport {\n  useFirestoreQueryData,\n  useFirestoreDocumentData,\n} from \"@react-query-firebase/firestore\";\nimport {\n  getMessagesQuery,\n  getRoomsLatestMessage,\n  getUnreadMessagesQuery,\n  Message,\n  setMessagesAsRead,\n} from \"services/firebase/firestore/messages\";\nimport { Agent, Customer, AppUser } from \"services/firebase/auth\";\nimport { createApp, createFirestore, ID } from \"services/firebase\";\nimport { Firestore, doc, DocumentReference } from \"firebase/firestore\";\nimport { FirebaseApp } from \"firebase/app\";\n\nimport {\n  getAgentRoomsQuery,\n  getCustomerRoomDoc,\n  Room as RoomType,\n} from \"services/firebase/firestore/rooms\";\nimport { getFileUrl, UnauthenticatedError, uploadFile } from \"services/wsata\";\nimport { getMessageDisplayText } from \"services/utils\";\n\ntype ChatContext = {\n  firebase: FirebaseApp;\n  firestore: Firestore;\n};\n\nconst chatContext = createContext<ChatContext>({} as ChatContext);\n\nconst customerAuthContext = createContext<Customer>({} as Customer);\n\nconst agentAuthContext = createContext<Agent>({} as Agent);\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <div\n      className='selection:bg-accent selection:text-accent-50 select-none'\n      dir='rtl'>\n      <QueryClientProvider client={queryClient}>\n        <ChatApp />\n      </QueryClientProvider>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction ChatApp() {\n  const firebase = useMemo(createApp, []);\n  const auth = useAuth();\n  const firestore = useMemo(() => createFirestore(firebase), [firebase]);\n\n  if (!auth.user) {\n    return (\n      <ErrorScreen\n        error={new UnauthenticatedError(\"من فضلك، سجل الدخول في حسابك\")}\n      />\n    );\n  }\n\n  return (\n    <chatContext.Provider value={{ firebase, firestore }}>\n      {auth.user.type === \"customer\" && (\n        <customerAuthContext.Provider value={auth.user}>\n          <CustomerChatApp />\n        </customerAuthContext.Provider>\n      )}\n      {auth.user.type === \"agent\" && (\n        <agentAuthContext.Provider value={auth.user}>\n          <AgentChatApp />\n        </agentAuthContext.Provider>\n      )}\n    </chatContext.Provider>\n  );\n}\n\nfunction useDebounce<T>(value: T, delay: number) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\n\nfunction AgentChatApp() {\n  const agent = useContext(agentAuthContext);\n  const { firestore } = useContext(chatContext);\n  const [currentRoom, setCurrentRoom] = useState<RoomType>();\n  const [roomsSearchTerm, setRoomsSearchTerm] = useState<string | undefined>();\n  const [roomsLatestMessage, setRoomsLatestMessage] = useState<\n    Map<ID, Message>\n  >(new Map());\n\n  const rooms = useFirestoreQueryData(\n    \"rooms\",\n    getAgentRoomsQuery(firestore, agent),\n    { subscribe: true },\n    {\n      enabled: Boolean(agent && firestore),\n    }\n  );\n\n  const unreadMessagesData = useFirestoreQueryData(\n    \"unread-messages\",\n    getUnreadMessagesQuery(firestore, agent /* , currentRoom */),\n    { subscribe: true },\n    { enabled: Boolean(agent) }\n  );\n\n  const unreadMessages = useMemo(() => {\n    return (\n      unreadMessagesData.data?.filter((message) =>\n        rooms.data?.find((room) => room.id === message.roomId)\n      ) || []\n    );\n  }, [rooms.data, unreadMessagesData.data]);\n\n  const unreadMessagesCount = useDebounce(unreadMessages.length || 0, 200);\n\n  const roomsUnreadCount = useMemo(() => {\n    if (!rooms.data) return;\n\n    const result = new Map<ID, number>(rooms.data.map((room) => [room.id, 0]));\n\n    unreadMessages.forEach((message) => {\n      result.set(message.roomId, (result.get(message.roomId) || 0) + 1);\n    });\n\n    return result;\n  }, [rooms.data, unreadMessages]);\n\n  const handleOpenRoom = (roomId: ID) => {\n    const room = rooms.data?.find((room) => room.id === roomId);\n    setCurrentRoom(room);\n  };\n\n  const handleRoomsLatestMessageChange = (latestMessage: Message) => {\n    setRoomsLatestMessage((roomsLatestMessage) => {\n      const updated = new Map(roomsLatestMessage);\n      updated.set(latestMessage.roomId, latestMessage);\n      return updated;\n    });\n  };\n\n  return (\n    <div className='flex flex-col h-screen'>\n      {rooms.data && (\n        <Toolbar\n          username={agent.name}\n          backUrl={agent.backURL}\n          unreadMessagesCount={unreadMessagesCount}\n          notificationsItems={unreadMessages.map((message) => (\n            <Toolbar.MessageNotificationItem\n              key={message.id}\n              name={\n                rooms.data.find((room) => room.id === message.roomId)?.customer\n                  .name || \"عميل\"\n              }\n              message={getMessageDisplayText(message)}\n              createdAt={message.created_at}\n              read={message.read}\n              onSelect={() => handleOpenRoom(message.roomId)}\n            />\n          ))}\n        />\n      )}\n\n      <div className='flex-1 h-0 flex items-stretch divide-x divide-x-reverse'>\n        <RoomsList>\n          {!rooms.data?.length ? (\n            <RoomsList.NoRooms />\n          ) : (\n            <>\n              <RoomsList.Search onChange={setRoomsSearchTerm} />\n              {rooms.data\n                .filter((room) =>\n                  roomsSearchTerm\n                    ? room.customer.name.match(roomsSearchTerm)\n                    : true\n                )\n                .sort((a, b) => {\n                  const aLatestMessage = roomsLatestMessage.get(a.id);\n                  const bLatestMessage = roomsLatestMessage.get(b.id);\n                  if (!aLatestMessage && bLatestMessage) return 1;\n\n                  if (!bLatestMessage && aLatestMessage) return -1;\n\n                  return (\n                    (aLatestMessage &&\n                      bLatestMessage &&\n                      bLatestMessage.created_at.getTime() -\n                        aLatestMessage.created_at.getTime()) ??\n                    0\n                  );\n                })\n                .map((room) => (\n                  <RoomsListRoom\n                    key={room.id}\n                    room={room}\n                    user={agent}\n                    name={room.customer.name}\n                    active={currentRoom?.id === room.id}\n                    onSelect={() => handleOpenRoom(room.id)}\n                    unreadMessages={roomsUnreadCount?.get(room.id)}\n                    onLatestMessageChange={handleRoomsLatestMessageChange}\n                  />\n                ))}\n            </>\n          )}\n        </RoomsList>\n        <div className='flex-1'>\n          {currentRoom && (\n            <Room\n              key={currentRoom.id}\n              user={agent}\n              room={currentRoom}\n              noMessagesMessage='لا يوجد رسائل'\n              className='h-full'\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ntype RoomsListRoomProps = {\n  room: RoomType;\n  user: AppUser;\n  onLatestMessageChange: (latestMessage: Message) => void;\n} & Omit<\n  React.ComponentProps<typeof RoomsList.Room>,\n  \"lastMessage\" | \"lastMessageSentAt\"\n>;\n\nfunction RoomsListRoom(props: RoomsListRoomProps) {\n  const { firestore } = useContext(chatContext);\n\n  const messages = useFirestoreQueryData(\n    [\"room-latest-message\", props.room.id],\n    getRoomsLatestMessage(firestore, props.user, props.room),\n    { subscribe: true }\n  );\n\n  const latestMessage = useMemo(\n    () => messages?.data && messages.data[0],\n    [messages.data]\n  );\n\n  useEffect(() => {\n    latestMessage && props.onLatestMessageChange(latestMessage);\n  }, [latestMessage]);\n\n  return (\n    <RoomsList.Room\n      {...props}\n      latestMessage={\n        latestMessage\n          ? {\n              text: getMessageDisplayText(latestMessage),\n              sentAt: latestMessage.created_at,\n              read: latestMessage.read,\n            }\n          : undefined\n      }\n    />\n  );\n}\n\nfunction CustomerChatApp() {\n  const customer = useContext(customerAuthContext);\n  const { firestore } = useContext(chatContext);\n\n  const roomDoc = useQuery(\"roomquery\", async () =>\n    getCustomerRoomDoc(firestore, customer)\n  );\n\n  const room = useFirestoreDocumentData<RoomType>(\n    \"room\",\n    roomDoc?.data ??\n      (doc(firestore, \"_STUB_/stub\") as DocumentReference<RoomType>),\n    {\n      subscribe: true,\n    },\n    { enabled: Boolean(roomDoc.data) }\n  );\n\n  if (roomDoc.isLoading || room.isLoading) {\n    return <LoadingScreen />;\n  }\n\n  if (roomDoc.error || room.error || !room.data) {\n    return (\n      <ErrorScreen\n        error={\n          (roomDoc.error as Error) ||\n          (room.error as Error) ||\n          new Error(`No room for cutomer ${customer.id}.`)\n        }\n      />\n    );\n  }\n\n  return (\n    <div className='flex flex-col h-screen relative'>\n      <Toolbar\n        username={customer.name}\n        backUrl={customer.backURL}\n        className='sticky top-0 z-50'\n      />\n      <Room\n        key={room.data?.id}\n        user={customer}\n        room={room.data}\n        noMessagesMessage='تفضل بالسؤال'\n        showWelcomeHeader\n        className='flex-1 h-0'\n      />\n    </div>\n  );\n}\n\nfunction Room({\n  noMessagesMessage,\n  showWelcomeHeader,\n  className,\n  user,\n  room,\n}: {\n  showWelcomeHeader?: boolean;\n  noMessagesMessage: string;\n  user: AppUser;\n  room: RoomType;\n} & React.HTMLAttributes<HTMLDivElement>) {\n  const { firestore } = useContext(chatContext);\n\n  const { mutate: sendMessage } = useSendMessage(firestore, user, room);\n\n  const messages = useFirestoreQueryData(\n    [\"messages\", room.id],\n    getMessagesQuery(firestore, user, room),\n    { subscribe: true }\n  );\n\n  useEffect(() => {\n    messages.refetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (messages.data) setMessagesAsRead(firestore, user, room);\n  }, [firestore, user, messages.data, room]);\n\n  const lastMessageRef = useScrollTo(\n    messages.data?.[messages.data?.length - 1]\n  );\n  const [zoomedImage, setZoomedImage] = useState<string>();\n\n  if (messages.error)\n    return (\n      <RoomComponent.NoMessages className='text-center'>\n        {messages.error.name}\n        <br />\n        {messages.error.message}\n      </RoomComponent.NoMessages>\n    );\n\n  return (\n    <div className={`flex flex-col relative ${className}`}>\n      {zoomedImage && (\n        <div\n          className='absolute w-full h-full bg-gray/50 flex items-center justify-center z-50'\n          onClick={() => setZoomedImage(undefined)}>\n          <img\n            src={zoomedImage}\n            alt='preview'\n            className='max-w-full mx-8 sm:max-w-6xl object-contain'\n          />\n        </div>\n      )}\n\n      <RoomComponent className='flex-1'>\n        {showWelcomeHeader && <RoomComponent.WelcomeHeader className='mb-8' />}\n        {messages.isLoading ? (\n          <RoomComponent.MessagesLoading />\n        ) : !messages.data?.length ? (\n          <RoomComponent.NoMessages>\n            {noMessagesMessage}\n          </RoomComponent.NoMessages>\n        ) : (\n          <RoomComponent.Messages>\n            {messages.data?.map((message, i, messages) => {\n              const lastMessage = i === messages.length - 1;\n              const sameAsAfter =\n                messages.length > 1 &&\n                messages[lastMessage ? i - 1 : i + 1].received ===\n                  message.received;\n\n              return (\n                <RoomComponent.Messages.Message\n                  key={message.id}\n                  ref={lastMessage ? lastMessageRef : null}\n                  received={message.received}\n                  withNext={!lastMessage && sameAsAfter}\n                  sent={message.status === \"sent\"}\n                  read={message.read}\n                  timestamp={new Date(message.created_at)}\n                  type={message.type}\n                  text={message.text}\n                  attachmentsURL={\n                    message.filename ? getFileUrl(message.filename) : undefined\n                  }\n                  onSelectAttachment={setZoomedImage}\n                />\n              );\n            })}\n          </RoomComponent.Messages>\n        )}\n      </RoomComponent>\n\n      <Input\n        room={room}\n        sender={user}\n        onSend={(text, file) => {\n          sendMessage({\n            text,\n            filename: file?.filename,\n            type: file?.type ?? \"text\",\n          });\n        }}\n      />\n    </div>\n  );\n}\n\nfunction Input({\n  room,\n  sender,\n  onSend,\n}: {\n  room: RoomType;\n  sender: AppUser;\n  onSend: (\n    message?: string,\n    file?: { filename: string; type: \"image\" | \"file\" }\n  ) => void;\n}) {\n  const upload = useMutation((file: File) => uploadFile(file, sender, room));\n\n  const handleSendFile = async (file: File) => {\n    onSend(undefined, await upload.mutateAsync(file));\n    upload.reset();\n  };\n\n  const handleSendText = async (message: string) => {\n    onSend(message);\n  };\n\n  return (\n    <div>\n      {upload.isLoading && (\n        <div className='max-w-2xl mx-auto p-4 space-x-2 space-x-reverse flex items-center'>\n          <i className='fa fa-spinner fa-2x fa-fw fa-pulse my-2 text-gray-300'></i>\n          <span>{\"جار الرفع\"}</span>\n          <span dir='auto'>[{upload.variables?.name}]</span>\n        </div>\n      )}\n      <InputComponent\n        disabledSend={upload.isLoading}\n        onSelectFiles={handleSendFile}\n        onSend={handleSendText}\n      />\n    </div>\n  );\n}\n\nfunction LoadingScreen() {\n  return (\n    <div\n      className='flex flex-col items-center justify-center h-screen text-primary'\n      dir='auto'>\n      <i className='fa fa-spinner fa-2x text-gray-300 fa-fw fa-pulse my-2'></i>\n    </div>\n  );\n}\n\nfunction ErrorScreen(props: React.PropsWithChildren<{ error: Error }>) {\n  return (\n    <div className='h-screen flex flex-col items-center justify-center'>\n      <h2 className='text-2xl text-primary mb-4'>{\"حدث خطأ\"}</h2>\n      <pre className='text-center leading-6'>\n        {props.error.name}\n        <br />\n        {props.error.message}\n        <br />\n        {props.children}\n      </pre>\n    </div>\n  );\n}\n","import { AppUser } from \"services/firebase/auth\";\r\n\r\n// window.authUser = {\r\n//   id: 61,\r\n//   name: \"أحمد\",\r\n//   userType: \"agent\",\r\n//   redirect_url: null,\r\n//   baseUrl: null,\r\n//   // baseUrl: 'https://api.alwsatarealestate.com/api',\r\n// };\r\n\r\nexport function useAuth(): { user?: AppUser } {\r\n  const authUser = window.authUser || window.parent.authUser;\r\n\r\n  return {\r\n    user: authUser\r\n      ? {\r\n          id: String(authUser.id),\r\n          type: authUser.userType,\r\n          name: authUser.name,\r\n          backURL: authUser.redirect_url ?? undefined,\r\n        }\r\n      : undefined,\r\n  };\r\n}\r\n","import { useFirestoreCollectionMutation } from \"@react-query-firebase/firestore\";\r\nimport {\r\n  getMessagesCollectionRef,\r\n  Message,\r\n} from \"services/firebase/firestore/messages\";\r\nimport { AppUser } from \"services/firebase/auth\";\r\nimport { Firestore, getDoc, DocumentReference } from \"firebase/firestore\";\r\nimport { Room } from \"services/firebase/firestore/rooms\";\r\nimport { sendMessageNotification } from \"services/firebase/cloud-messaging\";\r\n\r\nexport function useSendMessage(\r\n  firestore: Firestore,\r\n  sender: AppUser,\r\n  room: Room\r\n) {\r\n  const ref = getMessagesCollectionRef(firestore, sender, room);\r\n\r\n  type SentMessage = Pick<Message, \"text\" | \"filename\" | \"type\">;\r\n\r\n  return useFirestoreCollectionMutation<SentMessage>(ref, {\r\n    onSuccess: async (data) => {\r\n      const message = await (\r\n        await getDoc<Message>(data as DocumentReference<Message>)\r\n      ).data({});\r\n\r\n      if (!message) return;\r\n\r\n      sendMessageNotification(\r\n        message,\r\n        sender.type === \"agent\" ? \"customer\" : \"agent\",\r\n        sender.type === \"agent\" ? room.customer.id : room.agent.id\r\n      ).catch((e) => {\r\n        console.warn(\"Cannot send push notification for message\", e);\r\n      });\r\n    },\r\n  });\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport function useScrollTo(dependency?: any) {\r\n  const lastMessageRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      lastMessageRef.current?.scrollIntoView();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [dependency ?? lastMessageRef.current]\r\n  );\r\n  return lastMessageRef;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}